<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Develog</title>
    <link>/</link>
    <description>Recent content on Develog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy;2020. Julrum all rights reserved.</copyright>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>6. 배열</title>
      <link>/posts/06._array/</link>
      <pubDate>Wed, 25 Mar 2020 14:44:34 +0000</pubDate>
      
      <guid>/posts/06._array/</guid>
      <description>같은 형식의 여러 데이터를 연속된 메모리 공간에 저장하여 사용하는 자료들의 집합
 종류 : 1차원 배열, 2차원 배열 등  01 1차원 배열 첨자가 하나인 직선형의 배열
형식 데이터형 배열명[첨자];
구조    배열명 첨자 배열     a 0 a[0]    1 a[1]    2 a[2]    3 a[3]    4 a[4]    5 a[5]    6 a[6]    7 a[7]    8 a[8]    배열 선언 예  int a[5]; int b[] = [10.</description>
    </item>
    
    <item>
      <title>5-2. 제어문(반복문)</title>
      <link>/posts/05._control_statement_2/</link>
      <pubDate>Wed, 25 Mar 2020 13:59:19 +0000</pubDate>
      
      <guid>/posts/05._control_statement_2/</guid>
      <description>02 반복문 프로그램 수행 중 특정 문장을 반복 수행하고자 할 때 사용하는 명령문
1) for 문 변수가 초기값을 가지고 증감식에 의해 증감하면서 조건식이 만족하는 동안 반복하는 명령
문법 for(초기값; 조건식; 증감식) { 반복할 명령문; } 실습 5_15_a) # include &amp;lt;stdio.h&amp;gt; int main() { int i; for(i = 1; i&amp;lt;=10; i++) printf(&amp;#34;%5d&amp;#34;, i); return 0; } 실습 5_15_b) # include &amp;lt;stdio.h&amp;gt; int main() { int a; for(a = 1; a &amp;lt;= 10; a += 2) printf(&amp;#34;%5d&amp;#34;, a); return 0; } 실습 5_15_c) # include &amp;lt;stdio.</description>
    </item>
    
    <item>
      <title>5-1. 제어문(반복문)</title>
      <link>/posts/05._control_statement_1/</link>
      <pubDate>Wed, 25 Mar 2020 13:20:09 +0000</pubDate>
      
      <guid>/posts/05._control_statement_1/</guid>
      <description>순차적인 프로그램 실행 순서를 변경하거나반복 수행하고자 할 때 사용하는 명령문
종류  분기문 : if 문, switch~case문 반복문 : for 문, while 문 보조제어문 : continue 문, break 문  제어문에 따른 실행 문장이 한 문장이면 블록을 생략해도 좋다.
01 분기문 1) if 문 조건이 참이면 명령문1을 실행함
문법 if(조건문) { 명령문1; } 실습 5_01 # include &amp;lt;stdio.h&amp;gt; int main() { int jumsu; printf(&amp;#34;점수 = ? &amp;#34;); scanf(&amp;#34;%d&amp;#34;, &amp;amp;jumsu); if(jumsu &amp;gt;= 80) printf(&amp;#34;합격&amp;#34;); return 0; } 실습 5_02 # include &amp;lt;stdio.</description>
    </item>
    
    <item>
      <title>4. 연산자와 수식</title>
      <link>/posts/04._operators_and_formulas/</link>
      <pubDate>Wed, 25 Mar 2020 11:41:00 +0000</pubDate>
      
      <guid>/posts/04._operators_and_formulas/</guid>
      <description>01 산술연산자    연산자 기능 사용     + 좌우의 값을 더한다. a=b+c   - 왼쪽의 값에서 오른쪽의 값을 뺀다. a=b-c   * 좌우의 값을 곱한다. a=b*c   / 왼쪽의 값을 오른쪽의 값으로 나눈다. a=b/c   % 왼쪽의 값을 오른쪽의 값으로 나눈 나머지를 구한다. a=b%c    실습 4_01 # include &amp;lt;stdio.h&amp;gt; int main() { int a, b, add, sub, mul, div, mod; printf(&amp;#34;두 수 입력 : &amp;#34;); scanf(&amp;#34;%d %d&amp;#34;, &amp;amp;a, &amp;amp;b); add = a + b; sub = a - b; mul = a * b; div = a / b; mod = a % b; printf(&amp;#34;덧셈 = %d 뺄셈 = %d 곱셈 = %d 나눗셈 %d = %d 나머지 = %d&amp;#34;, add, sub, mul, div, mod); return 0; } 실습 4_02 # include &amp;lt;stdio.</description>
    </item>
    
    <item>
      <title>3. 표준 입출력 함수</title>
      <link>/posts/03._standard_input_output/</link>
      <pubDate>Wed, 25 Mar 2020 08:07:51 +0000</pubDate>
      
      <guid>/posts/03._standard_input_output/</guid>
      <description>01 printf( ) 함수 데이터를 서식에 맞추어 화면상에 출력하게 하는 함수
형식 printf(&amp;quot;문자열&amp;quot;);
printf(&amp;quot;서식 문자열&amp;quot;, 인수1[, 인수2, ...]);
출력 형식    출력 형식 설명     %c 한 개의 문자   %d 10 진수   %e 지수형의 실수   %f 실수   %g e 포맷이나 f 포맷 중 짧은 형식으로 출력   %s 문자열    실습 3_01 # include &amp;lt;stdio.</description>
    </item>
    
    <item>
      <title>2. 자료형과 변수</title>
      <link>/posts/02._data_types_and_variables/</link>
      <pubDate>Tue, 24 Mar 2020 14:42:15 +0000</pubDate>
      
      <guid>/posts/02._data_types_and_variables/</guid>
      <description>1) 자료형의 크기 및 표현 범위    정수형 문자형 부동 소수점 형     short 변수명; char 변수명; float 변수명;   int 변수명;  double 변수명;   long 변수명;  long double 변수명;    unsigned short 변수명;      unsigned int 변수명;      unsigned long 변수명;         자료형 크기 수의 표현 범위     short 4 byte -32768 ~ 32767 (-2^15^ ~ 2^15^-1)   int 4 byte -2^31^ ~ 2^31^-1   long 4 byte -2^31^ ~ 2^31^-1   unsigned short 2 byte 0 ~ 65535   unsigned int 4 byte 0 ~ 2^32^-1   unsigned long 4 byte 0 ~ 2^32^-1   char 1 byte 0 ~ 255   float 4 byte 약 10^-38^ ~ 10^38^   double 8 byte 약 10^-308^ ~ 10^308^   long double 8 byte 약 10^-308^ ~ 10^308^    실습 2_01 # include &amp;lt;stdio.</description>
    </item>
    
    <item>
      <title>1. C 언어의 기초</title>
      <link>/posts/01._basic_of_c/</link>
      <pubDate>Mon, 23 Mar 2020 14:39:29 +0000</pubDate>
      
      <guid>/posts/01._basic_of_c/</guid>
      <description>1) C 언어의 특징  서로 다른 기종간의 호환성이 뛰어나다. C 언어는 여러 개의 함수로 구성되어 있어 구조적 프로그래밍이 가능하다. 다양한 연산자를 제공한다. 메모리 주소를 제어할 수 있는 기능을 가지고 있어 하드웨어를 제어하는 프로그램을 쉽게 작성할 수 있다.  2) C 언어의 기본 구조 # include &amp;lt;stdio.h&amp;gt; int main() { 변수 선언; 명령들......; return 0; } (1) main() 함수 C언어로 작성된 프로그램은 main() 함수로 시작하고 끝나기 때문에 반드시 main() 함수를 가지고 있어야 하며, 반드시 { 로 시작해서 } 로 끝난다.</description>
    </item>
    
    <item>
      <title></title>
      <link>/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>About Me I&amp;rsquo;m Junwon Park(박준원), a junior software engineer located in Republic of Korea.
I use julrum as my primary username in various sites.
I love programming using C++, Python and React. I am currently a college student. I&amp;rsquo;m writing what I learned on this blog.</description>
    </item>
    
    <item>
      <title>Archive</title>
      <link>/archive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archive/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>